PRO create_coo2,h,coo1,coo2, $	       silent=silent,lbl=lbl,remove_edge=remove_edge;+; NAME:;	create_coo2; PURPOSE:;        CREATE_coo creates coordinates from any fits header; CATEGORY:;       Coordinates conversions; CALLING SEQUENCE: ;	CREATE_COO2,H,coo1,coo2; INPUTS:;       h= the header; OPTIONAL INPUT PARAMETERS:; OUTPUTS:;	coo1 = latitude (degrees);	coo2 = longitude (degrees); OPTIONAL OUTPUT PARAMETERS:; ACCEPTED KEY-WORDS:;	lbl      = line by line processing;       silent   = If set keeps silent;       remove_edge = if set bad coordinates at edges are set to;                     !indef. Necessary for projections such as GLS,;                     etc ..; COMMON BLOCKS:; SIDE EFFECTS:; RESTRICTIONS:; PROCEDURE:;	Creates 1D or 2D arrays of coordinates in a given projection.;	The parameters are taken from the fits header h, unless specified;	in keywords (e.g proj).;	Uses the 3 step procedure described by Greisen & Calabretta (Fits;	standards).;	Output coordinates are in degrees, and areas with no coordinates;	are filled with undefined values (-32768). Longitude increase toward;	right for cdelt > 0;	Currently recognized projection types are:;	CAR	Cartesian;	GLS	Global Sinusoidal;	MOL	Mollweide's;	AIT	Aitoff;; Uses :sxpar,pix2coo; MODIFICATION HISTORY:;	Written Jan 31 1995 J.P. Bernard, IPAC.;-@proj_common.com;---------------------------------------------------------------; parameter check;---------------------------------------------------------------IF N_PARAMS(0) LT 3 THEN BEGIN  PRINT,'Calling Sequence: '  PRINT,'create_coo2,h,coo1,coo2'  PRINT,'   (coordinates in degrees)'  PRINT,'Accepted Key words: /remove_edge,/silent,/lbl'  GOTO, closingENDIF;====== Set the projection paramsh2pix,h,silent=silent				;put projection params into commonprint,proj+':'h2pix,h,pixx,pixy,silent=silentphi=[1.] ;in case phi is not set by the following pix2coo2 (e.g. for CAR) and remove_edge is setpix2coo2,pixx,pixy,coo1,coo2,phi,proj=proj,silent=silent,lbl=lblIF keyword_set(remove_edge) THEN BEGIN  ind=where(abs(phi) GT 180.,count)  IF count NE 0 THEN BEGIN    coo1(ind)=!indef    coo2(ind)=!indef  ENDIFENDIFRETURNclosing:END